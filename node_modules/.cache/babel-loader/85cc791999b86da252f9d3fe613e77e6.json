{"ast":null,"code":"var _jsxFileName = \"/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './routines.css';\nimport Routine from './Routine';\n/*\n    I've put this axios function outside of the component, but it can go inside the useEffect if you want\n    Mainly I like it outside.  In fact, it might be good to put all the axios calls in a seperate\n    folder for ease of use (and import them in as needed)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getRoutines() {\n  let {\n    data\n  } = await axios.get('http://fitnesstrac-kr.herokuapp.com/api/routines');\n  return data;\n}\n/*\n    All Routines component - displays the routines\n*/\n\n\nconst Routines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]); // initially it is empty array\n  // for pagination.. not required\n\n  const [page, setPage] = useState(0); // load 10 per page\n\n  /*\n    useEffect runs once the page loads.  If you do not put the [] as the second argument it will\n    run once for every time the component re-renders (which happens a lot).\n  */\n\n  useEffect(() => {\n    // async function required for awaiting the routes\n    async function getAllRoutines() {\n      let data = await getRoutines();\n      setRoutines(data); // when we have the data, set it in our components variable\n    } // call the inner function once to start the process\n\n\n    getAllRoutines(); // console.log('USE EFFECT RUNS ONCE')\n  }, []); //   console.log(routines)\n  // pagination example (this does 10 per page)\n\n  let limitedRoutines = routines.slice(0 + page * 10, page * 10 + 10); // Creates a <SingleRoutine /> component for every routine in our arrray\n\n  let displayRoutines = limitedRoutines.map((r, idx) => {\n    return /*#__PURE__*/_jsxDEV(Routine, {\n      routine: r\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }); // vvvvv  ---used below in the render -- vvvvvv\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routines\",\n    children: [displayRoutines, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      children: \"Next 10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}; //  The only thing to export here is the routines component.  The other components are being used internally\n//  so they dont need their own exports.\n\n\n_s(Routines, \"4ZCUS/4pc33I23F0bNbzG1EZYNM=\");\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/Routines.js"],"names":["React","useState","useEffect","axios","Routine","getRoutines","data","get","Routines","routines","setRoutines","page","setPage","getAllRoutines","limitedRoutines","slice","displayRoutines","map","r","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA;AACA;AACA;AACA;AACA;;;;AACA,eAAeC,WAAf,GAA6B;AAC3B,MAAI;AAAEC,IAAAA;AAAF,MAAW,MAAMH,KAAK,CAACI,GAAN,CACnB,kDADmB,CAArB;AAGA,SAAOD,IAAP;AACD;AAED;AACA;AACA;;;AACA,MAAME,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CADqB,CACwB;AAE7C;;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC,CAJqB,CAIe;;AAEpC;AACF;AACA;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAeW,cAAf,GAAgC;AAC9B,UAAIP,IAAI,GAAG,MAAMD,WAAW,EAA5B;AACAK,MAAAA,WAAW,CAACJ,IAAD,CAAX,CAF8B,CAEZ;AACnB,KALa,CAOd;;;AACAO,IAAAA,cAAc,GARA,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT,CAVqB,CAuBrB;AAEA;;AACA,MAAIC,eAAe,GAAGL,QAAQ,CAACM,KAAT,CAAe,IAAIJ,IAAI,GAAG,EAA1B,EAA8BA,IAAI,GAAG,EAAP,GAAY,EAA1C,CAAtB,CA1BqB,CA4BrB;;AACA,MAAIK,eAAe,GAAGF,eAAe,CAACG,GAAhB,CAAoB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACpD,wBAAO,QAAC,OAAD;AAAmB,MAAA,OAAO,EAAED;AAA5B,OAAcC,GAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFqB,CAAtB,CA7BqB,CAgCrB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eAEGH,eAFH,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1CD,C,CA6CA;AACA;;;GA9CMH,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './routines.css'\n\nimport Routine from './Routine'\n\n/*\n    I've put this axios function outside of the component, but it can go inside the useEffect if you want\n    Mainly I like it outside.  In fact, it might be good to put all the axios calls in a seperate\n    folder for ease of use (and import them in as needed)\n*/\nasync function getRoutines() {\n  let { data } = await axios.get(\n    'http://fitnesstrac-kr.herokuapp.com/api/routines'\n  )\n  return data\n}\n\n/*\n    All Routines component - displays the routines\n*/\nconst Routines = () => {\n  const [routines, setRoutines] = useState([]) // initially it is empty array\n\n  // for pagination.. not required\n  const [page, setPage] = useState(0) // load 10 per page\n\n  /*\n    useEffect runs once the page loads.  If you do not put the [] as the second argument it will\n    run once for every time the component re-renders (which happens a lot).\n  */\n  useEffect(() => {\n    // async function required for awaiting the routes\n    async function getAllRoutines() {\n      let data = await getRoutines()\n      setRoutines(data) // when we have the data, set it in our components variable\n    }\n\n    // call the inner function once to start the process\n    getAllRoutines()\n\n    // console.log('USE EFFECT RUNS ONCE')\n  }, [])\n\n  //   console.log(routines)\n\n  // pagination example (this does 10 per page)\n  let limitedRoutines = routines.slice(0 + page * 10, page * 10 + 10)\n\n  // Creates a <SingleRoutine /> component for every routine in our arrray\n  let displayRoutines = limitedRoutines.map((r, idx) => {\n    return <Routine key={idx} routine={r} />\n  })\n  // vvvvv  ---used below in the render -- vvvvvv\n\n  return (\n    <div className='routines'>\n      {/* Button is for pagination */}\n      {displayRoutines}\n      <button onClick={() => setPage(page + 1)}>Next 10</button>\n\n    </div>\n  )\n}\n\n\n//  The only thing to export here is the routines component.  The other components are being used internally\n//  so they dont need their own exports.\nexport default Routines"]},"metadata":{},"sourceType":"module"}