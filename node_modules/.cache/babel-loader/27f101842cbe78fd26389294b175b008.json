{"ast":null,"code":"var _jsxFileName = \"/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './myroutines.css';\nimport axios from 'axios';\nimport UserRoutine from './UserRoutine';\nimport Routine from './Routine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\n\nasync function getRoutines() {\n  let {\n    data\n  } = await axios.get(BASE_URL + '/routines');\n  return data;\n}\n\nconst MyRoutines = ({\n  currentUser\n}) => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n\n  if (currentUser === '') {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please login.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  }\n\n  useEffect(() => {\n    // async function required for awaiting the routes\n    async function getAllRoutines() {\n      let data = await getRoutines();\n      console.log(data);\n      setRoutines(data); // when we have the data, set it in our components variable\n    } // call the inner function once to start the process\n\n\n    getAllRoutines(); // console.log('USE EFFECT RUNS ONCE')\n  }, []);\n\n  const routineMatches = function (routine, term) {\n    if (routine.creatorName === term) {\n      console.log(routine.creatorName);\n      return /*#__PURE__*/_jsxDEV(UserRoutine, {\n        id: routine.id,\n        creator: routine.creatorName,\n        name: routine.name,\n        goal: routine.goal,\n        publicStatus: routine.isPublic,\n        currentUser: currentUser\n      }, routine.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no routines. Please visit New Routine to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this);\n    }\n  };\n\n  const filteredRoutines = routines.filter(routine => routineMatches(routine, localStorage.getItem('currentUser')));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredRoutines.map(routine => {\n      return /*#__PURE__*/_jsxDEV(UserRoutine, {\n        id: routine.id,\n        creator: routine.creatorName,\n        name: routine.name,\n        goal: routine.goal,\n        publicStatus: routine.isPublic,\n        currentUser: currentUser\n      }, routine.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(MyRoutines, \"Fi33NERAyThe7noKpurykKK5o+c=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/MyRoutines.js"],"names":["React","useState","useEffect","axios","UserRoutine","Routine","BASE_URL","getRoutines","data","get","MyRoutines","currentUser","routines","setRoutines","getAllRoutines","console","log","routineMatches","routine","term","creatorName","id","name","goal","isPublic","filteredRoutines","filter","localStorage","getItem","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAQ,GAAG,yCAAjB;;AAEA,eAAeC,WAAf,GAA6B;AACzB,MAAI;AAACC,IAAAA;AAAD,MAAS,MAAML,KAAK,CAACM,GAAN,CAAUH,QAAQ,GAAG,WAArB,CAAnB;AACA,SAAOE,IAAP;AACH;;AAED,MAAME,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAElC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,MAAIU,WAAW,KAAK,EAApB,EAAwB;AACpB,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACC;;AAGLT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAeY,cAAf,GAAgC;AAC9B,UAAIN,IAAI,GAAG,MAAMD,WAAW,EAA5B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAK,MAAAA,WAAW,CAACL,IAAD,CAAX,CAH8B,CAGZ;AACnB,KANW,CAQZ;;;AACAM,IAAAA,cAAc,GATF,CAWZ;AACD,GAZM,EAYJ,EAZI,CAAT;;AAcA,QAAMG,cAAc,GAAG,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC3C,QAAID,OAAO,CAACE,WAAR,KAAwBD,IAA5B,EAAiC;AAC7BJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACE,WAApB;AACI,0BAAO,QAAC,WAAD;AACP,QAAA,EAAE,EAAEF,OAAO,CAACG,EADL;AAGP,QAAA,OAAO,EAAEH,OAAO,CAACE,WAHV;AAIP,QAAA,IAAI,EAAEF,OAAO,CAACI,IAJP;AAKP,QAAA,IAAI,EAAEJ,OAAO,CAACK,IALP;AAMP,QAAA,YAAY,EAAEL,OAAO,CAACM,QANf;AAOP,QAAA,WAAW,EAAEb;AAPN,SAEFO,OAAO,CAACG,EAFN;AAAA;AAAA;AAAA;AAAA,cAAP;AASH,KAXL,MAWW;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACR,GAfD;;AAiBA,QAAMI,gBAAgB,GAAGb,QAAQ,CAACc,MAAT,CAAgBR,OAAO,IAAID,cAAc,CAACC,OAAD,EAAUS,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAV,CAAzC,CAAzB;AAEA,sBAAO;AAAA,cACNH,gBAAgB,CAACI,GAAjB,CAAsBX,OAAD,IAAa;AAC/B,0BAAO,QAAC,WAAD;AACH,QAAA,EAAE,EAAEA,OAAO,CAACG,EADT;AAGH,QAAA,OAAO,EAAEH,OAAO,CAACE,WAHd;AAIH,QAAA,IAAI,EAAEF,OAAO,CAACI,IAJX;AAKH,QAAA,IAAI,EAAEJ,OAAO,CAACK,IALX;AAMH,QAAA,YAAY,EAAEL,OAAO,CAACM,QANnB;AAOH,QAAA,WAAW,EAAEb;AAPV,SAEEO,OAAO,CAACG,EAFV;AAAA;AAAA;AAAA;AAAA,cAAP;AAQG,KATN;AADM,mBAAP;AAcH,CAxDD;;GAAMX,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './myroutines.css';\nimport axios from 'axios';\nimport UserRoutine from './UserRoutine';\n\nimport Routine from './Routine'\n\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\n\nasync function getRoutines() {\n    let {data} = await axios.get(BASE_URL + '/routines')\n    return data;\n}\n\nconst MyRoutines = ({currentUser}) => {\n    \n    const [routines, setRoutines] = useState([]);\n\n    if (currentUser === '') {\n        return (<h1>Please login.</h1>)\n        } \n\n\n    useEffect(() => {\n        // async function required for awaiting the routes\n        async function getAllRoutines() {\n          let data = await getRoutines()\n          console.log(data)\n          setRoutines(data) // when we have the data, set it in our components variable\n        }\n    \n        // call the inner function once to start the process\n        getAllRoutines()\n    \n        // console.log('USE EFFECT RUNS ONCE')\n      }, [])\n\n    const routineMatches = function(routine, term) {\n        if (routine.creatorName === term){\n            console.log(routine.creatorName)\n                return <UserRoutine\n                id={routine.id}\n                key={routine.id}\n                creator={routine.creatorName}\n                name={routine.name}\n                goal={routine.goal}\n                publicStatus={routine.isPublic}\n                currentUser={currentUser}\n            />\n            } else {\n                return <h1>You have no routines. Please visit New Routine to get started.</h1>\n            }\n    }\n\n    const filteredRoutines = routines.filter(routine => routineMatches(routine, localStorage.getItem('currentUser')));\n\n    return <>\n    {filteredRoutines.map((routine) => {\n        return <UserRoutine\n            id={routine.id}\n            key={routine.id}\n            creator={routine.creatorName}\n            name={routine.name}\n            goal={routine.goal}\n            publicStatus={routine.isPublic}\n            currentUser={currentUser}\n        />})\n    }\n</>\n    \n}\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}