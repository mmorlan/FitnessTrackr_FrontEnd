{"ast":null,"code":"var _jsxFileName = \"/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './myroutines.css';\nimport axios from 'axios';\nimport UserRoutine from './UserRoutine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\n\nasync function getRoutines() {\n  let {\n    data\n  } = await axios.get(BASE_URL + '/routines');\n  return data;\n}\n\nconst MyRoutines = ({\n  currentUser\n}) => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [page, setPage] = useState(0); // load 10 per page\n\n  if (currentUser === '') {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please login.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n\n  useEffect(() => {\n    // async function required for awaiting the routes\n    async function getAllRoutines() {\n      let data = await getRoutines();\n      console.log(data);\n      setRoutines(data); // when we have the data, set it in our components variable\n    } // call the inner function once to start the process\n\n\n    getAllRoutines(); // console.log('USE EFFECT RUNS ONCE')\n  }, []);\n  let limitedRoutines = routines.slice(0 + page * 10, page * 10 + 10);\n  let displayRoutines = limitedRoutines.map((r, idx) => {\n    return /*#__PURE__*/_jsxDEV(Routine, {\n      routine: r\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  });\n\n  const routineMatches = function (routine, term) {\n    if (routine.creatorName.includes(term)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const filteredRoutines = routines.filter(routine => routineMatches(routine, localStorage.getItem('currentUser')));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredRoutines.map(routine => {\n      return /*#__PURE__*/_jsxDEV(UserRoutine, {\n        id: routine.id,\n        creator: routine.creatorName,\n        name: routine.name,\n        goal: routine.goal,\n        publicStatus: routine.isPublic,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(MyRoutines, \"4ZCUS/4pc33I23F0bNbzG1EZYNM=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/MyRoutines.js"],"names":["React","useState","useEffect","axios","UserRoutine","BASE_URL","getRoutines","data","get","MyRoutines","currentUser","routines","setRoutines","page","setPage","getAllRoutines","console","log","limitedRoutines","slice","displayRoutines","map","r","idx","routineMatches","routine","term","creatorName","includes","filteredRoutines","filter","localStorage","getItem","id","name","goal","isPublic"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,yCAAjB;;AAEA,eAAeC,WAAf,GAA6B;AACzB,MAAI;AAACC,IAAAA;AAAD,MAAS,MAAMJ,KAAK,CAACK,GAAN,CAAUH,QAAQ,GAAG,WAArB,CAAnB;AACA,SAAOE,IAAP;AACH;;AAED,MAAME,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAElC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC,CAHkC,CAGE;;AAEpC,MAAIS,WAAW,KAAK,EAApB,EAAwB;AACpB,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACC;;AAGLR,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAea,cAAf,GAAgC;AAC9B,UAAIR,IAAI,GAAG,MAAMD,WAAW,EAA5B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAK,MAAAA,WAAW,CAACL,IAAD,CAAX,CAH8B,CAGZ;AACnB,KANW,CAQZ;;;AACAQ,IAAAA,cAAc,GATF,CAWZ;AACD,GAZM,EAYJ,EAZI,CAAT;AAcA,MAAIG,eAAe,GAAGP,QAAQ,CAACQ,KAAT,CAAe,IAAIN,IAAI,GAAG,EAA1B,EAA8BA,IAAI,GAAG,EAAP,GAAY,EAA1C,CAAtB;AAEA,MAAIO,eAAe,GAAGF,eAAe,CAACG,GAAhB,CAAoB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAClD,wBAAO,QAAC,OAAD;AAAmB,MAAA,OAAO,EAAED;AAA5B,OAAcC,GAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFmB,CAAtB;;AAIA,QAAMC,cAAc,GAAG,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC3C,QAAID,OAAO,CAACE,WAAR,CAAoBC,QAApB,CAA6BF,IAA7B,CAAJ,EAAuC;AAC/B,aAAO,IAAP;AACH,KAFL,MAEW;AACH,aAAO,KAAP;AACH;AACR,GAND;;AAQA,QAAMG,gBAAgB,GAAGlB,QAAQ,CAACmB,MAAT,CAAgBL,OAAO,IAAID,cAAc,CAACC,OAAD,EAAUM,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAV,CAAzC,CAAzB;AAEA,sBAAO;AAAA,cACNH,gBAAgB,CAACR,GAAjB,CAAuBI,OAAD,IAAa;AAChC,0BAAO,QAAC,WAAD;AACH,QAAA,EAAE,EAAEA,OAAO,CAACQ,EADT;AAEH,QAAA,OAAO,EAAER,OAAO,CAACE,WAFd;AAGH,QAAA,IAAI,EAAEF,OAAO,CAACS,IAHX;AAIH,QAAA,IAAI,EAAET,OAAO,CAACU,IAJX;AAKH,QAAA,YAAY,EAAEV,OAAO,CAACW,QALnB;AAMH,QAAA,WAAW,EAAE1B;AANV;AAAA;AAAA;AAAA;AAAA,cAAP;AAOG,KARN;AADM,mBAAP;AAaH,CArDD;;GAAMD,U;;KAAAA,U;AAuDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './myroutines.css';\nimport axios from 'axios';\nimport UserRoutine from './UserRoutine';\n\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\n\nasync function getRoutines() {\n    let {data} = await axios.get(BASE_URL + '/routines')\n    return data;\n}\n\nconst MyRoutines = ({currentUser}) => {\n    \n    const [routines, setRoutines] = useState([]);\n    const [page, setPage] = useState(0) // load 10 per page\n\n    if (currentUser === '') {\n        return (<h1>Please login.</h1>)\n        } \n\n\n    useEffect(() => {\n        // async function required for awaiting the routes\n        async function getAllRoutines() {\n          let data = await getRoutines()\n          console.log(data)\n          setRoutines(data) // when we have the data, set it in our components variable\n        }\n    \n        // call the inner function once to start the process\n        getAllRoutines()\n    \n        // console.log('USE EFFECT RUNS ONCE')\n      }, [])\n\n    let limitedRoutines = routines.slice(0 + page * 10, page * 10 + 10)\n\n    let displayRoutines = limitedRoutines.map((r, idx) => {\n        return <Routine key={idx} routine={r} />\n      })\n\n    const routineMatches = function(routine, term) {\n        if (routine.creatorName.includes(term)){\n                return true;\n            } else {\n                return false;\n            }\n    }\n\n    const filteredRoutines = routines.filter(routine => routineMatches(routine, localStorage.getItem('currentUser')));\n\n    return <>\n    {filteredRoutines.map( (routine) => {\n        return <UserRoutine\n            id={routine.id}\n            creator={routine.creatorName}\n            name={routine.name}\n            goal={routine.goal}\n            publicStatus={routine.isPublic}\n            currentUser={currentUser}\n        />})\n    }\n</>\n    \n}\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}