{"ast":null,"code":"var _jsxFileName = \"/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/UserRoutine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './userroutine.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\n\nconst UserRoutine = ({\n  id,\n  creator,\n  publicStatus,\n  name,\n  goal,\n  currentUser\n}) => {\n  _s();\n\n  let [editable, setEditable] = useState(false);\n  let token = localStorage.getItem('currentUserToken');\n\n  async function deleteRoutine(id) {\n    let response = await axios.delete(BASE_URL + '/routines/' + id, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n  }\n\n  function editRoutine() {\n    newRoutine = {\n      name: newName,\n      goal: newGoal,\n      isPublic: newPublicStatus\n    };\n    axios.patch(BASE_URL + \"/routines/\" + id, newRoutine, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('currentUserToken')\n      }\n    });\n    setEditable(false);\n  }\n\n  let newName = '';\n  let newGoal = '';\n  let newPublicStatus = false;\n  let newRoutine = {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-routine\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routine-labels\",\n        children: editable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"routine-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-routine-title\",\n              children: \"New Routine Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"new-routine-name\",\n              id: \"input-routine-name\",\n              onChange: event => {\n                newName = event.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"routine-goal\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-routine-goal\",\n              children: \"New Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"new-routine-goal\",\n              id: \"input-routine-goal\",\n              onChange: event => {\n                newGoal = event.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"privacy-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-routine-privacy\",\n              children: \"Want to make this routine public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"new-routine-privacy\",\n              id: \"input-routine-privacy\",\n              value: \"Public\",\n              onChange: event => {\n                newPublicStatus = event.target.checked;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine-name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine-goal\",\n            children: goal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine-creator\",\n            children: creator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"routine-public-status\",\n            children: publicStatus ? '' : 'This routine is currently private'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routine-buttons\",\n      children: localStorage.getItem(\"currentUser\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: localStorage.getItem(\"currentUser\") === creator ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [editable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-routine-button\",\n              onClick: () => {\n                editRoutine();\n              },\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-routine-button\",\n              onClick: () => {\n                setEditable(false);\n              },\n              children: \"Cancel Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-routine-button\",\n            onClick: () => {\n              setEditable(true);\n            },\n            children: \"Edit Routine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-routine-button\",\n            onClick: () => {\n              deleteRoutine(id);\n            },\n            children: \"Delete Routine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : ''\n      }, void 0, false) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserRoutine, \"v9AOl5wRgpqedlzTwQ7BmtO4/4w=\");\n\n_c = UserRoutine;\nexport default UserRoutine;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoutine\");","map":{"version":3,"sources":["/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/UserRoutine.js"],"names":["React","useState","BrowserRouter","Router","Route","Link","axios","BASE_URL","UserRoutine","id","creator","publicStatus","name","goal","currentUser","editable","setEditable","token","localStorage","getItem","deleteRoutine","response","delete","headers","Authorization","editRoutine","newRoutine","newName","newGoal","isPublic","newPublicStatus","patch","event","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport './userroutine.css';\nimport axios from 'axios';\n\n\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\n\n\n\nconst UserRoutine = ({\n    id, creator, publicStatus, name, goal, currentUser\n}) => {\n\n    let [editable, setEditable] = useState(false);\n\n    let token = localStorage.getItem('currentUserToken')\n\n    async function deleteRoutine(id) {\n        let response = await axios.delete(BASE_URL + '/routines/' + id,\n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        });\n\n    }\n\n    function editRoutine() {\n        newRoutine = {\n                name: newName,\n                goal: newGoal,\n                isPublic: newPublicStatus\n        }\n        axios.patch(BASE_URL + \"/routines/\" + id, \n            newRoutine,\n            {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem('currentUserToken')\n                }\n            });\n        setEditable(false);\n    }\n\n    let newName = '';\n    let newGoal = '';\n    let newPublicStatus = false;\n\n    let newRoutine = {};\n\n    return <><div className=\"user-routine\">\n                <div className=\"routine-labels\">\n                { editable ? <> \n                        <div id=\"routine-title\">\n                            <label htmlFor=\"new-routine-title\">New Routine Name</label>\n                            <input type=\"text\" name=\"new-routine-name\" id=\"input-routine-name\" \n                            onChange={(event) => {newName = event.target.value}}></input>\n                        </div>\n                        <div id=\"routine-goal\">\n                            <label htmlFor=\"new-routine-goal\">New Goal</label>\n                            <input type=\"text\" name=\"new-routine-goal\" id=\"input-routine-goal\" \n                            onChange={(event) => {newGoal = event.target.value}}></input>\n                        </div>\n                        <div id=\"privacy-box\">\n                            <label htmlFor=\"new-routine-privacy\">Want to make this routine public?</label>\n                            <input type=\"checkbox\" name=\"new-routine-privacy\" id=\"input-routine-privacy\" value=\"Public\"\n                            onChange={(event) => {newPublicStatus = event.target.checked}}></input>\n                        </div>\n                </> : <>\n                \n                    <div className=\"routine-name\">{name}</div>\n                    <div className=\"routine-goal\">{goal}</div>\n                    <div className=\"routine-creator\">{creator}</div>\n                    <div className=\"routine-public-status\">{publicStatus ? '' : 'This routine is currently private'}</div>\n                </> }\n                </div>\n        </div>\n        <div className=\"routine-buttons\">\n            {localStorage.getItem(\"currentUser\") ?\n                <>\n                { (localStorage.getItem(\"currentUser\") === creator) ? \n                    <>\n                        {editable ? \n                            <><button className=\"edit-routine-button\" \n                                onClick={() => {\n                                    editRoutine();\n                                }}>Save Changes</button>\n                            <button className=\"edit-routine-button\" onClick={() => {setEditable(false)}}>Cancel Changes</button>\n                            </> : \n                            <button className=\"edit-routine-button\" \n                                onClick={() => {setEditable(true)}}>Edit Routine</button>\n                        }\n                        \n                        <button className=\"delete-routine-button\"\n                            onClick={() => {deleteRoutine(id)}}>Delete Routine</button> \n                    </> :\n                    '' \n                }\n                </> : ''\n            }\n        </div>\n    </>\n\n}\n\nexport default UserRoutine;"]},"metadata":{},"sourceType":"module"}