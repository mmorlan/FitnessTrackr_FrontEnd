{"ast":null,"code":"var _jsxFileName = \"/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './routines.css';\n/*\n    I've put this axios function outside of the component, but it can go inside the useEffect if you want\n    Mainly I like it outside.  In fact, it might be good to put all the axios calls in a seperate\n    folder for ease of use (and import them in as needed)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getRoutines() {\n  let {\n    data\n  } = await axios.get('http://fitnesstrac-kr.herokuapp.com/api/routines');\n  return data;\n}\n/*\n    All Routines component - displays the routines\n*/\n\n\nconst Routines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]); // initially it is empty array\n  // for pagination.. not required\n\n  const [page, setPage] = useState(0); // load 10 per page\n\n  /*\n    useEffect runs once the page loads.  If you do not put the [] as the second argument it will\n    run once for every time the component re-renders (which happens a lot).\n  */\n\n  useEffect(() => {\n    // async function required for awaiting the routes\n    async function getAllRoutines() {\n      let data = await getRoutines();\n      setRoutines(data); // when we have the data, set it in our components variable\n    } // call the inner function once to start the process\n\n\n    getAllRoutines(); // console.log('USE EFFECT RUNS ONCE')\n  }, []); //   console.log(routines)\n  // pagination example (this does 10 per page)\n\n  let limmitedRoutines = routines.slice(0 + page * 10, page * 10 + 10); // Creates a <SingleRoutine /> component for every routine in our arrray\n\n  let displayRoutines = limmitedRoutines.map((r, idx) => {\n    return /*#__PURE__*/_jsxDEV(SingleRoutine, {\n      routine: r\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }); // vvvvv  ---used below in the render -- vvvvvv\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routines\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      children: \"Next 10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), displayRoutines]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n/*\n    This should probably be in its own file but I put it here for convineince during the demo\n    Renders a single routine.  Used in the map above ^^^\n*/\n\n\n_s(Routines, \"4ZCUS/4pc33I23F0bNbzG1EZYNM=\");\n\n_c = Routines;\n\nconst SingleRoutine = ({\n  routine\n}) => {\n  const activities = routine.activities; // same thing as mapping routines but for activities\n\n  let displayActivities = activities.map((a, idx) => {\n    return /*#__PURE__*/_jsxDEV(Activity, {\n      activity: a\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"routine\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: routine.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Creator: \", routine.creatorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Goal: \", routine.goal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: displayActivities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SingleRoutine;\n\nconst Activity = ({\n  activity\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"activity\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: activity.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: activity.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}; //  The only thing to export here is the routines component.  The other components are being used internally\n//  so they dont need their own exports.\n\n\n_c3 = Activity;\nexport default Routines;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Routines\");\n$RefreshReg$(_c2, \"SingleRoutine\");\n$RefreshReg$(_c3, \"Activity\");","map":{"version":3,"sources":["/Users/mattrmorlan/UIC/course-work/FitnessTrackr_FrontEnd/src/components/Routines.js"],"names":["React","useState","useEffect","axios","getRoutines","data","get","Routines","routines","setRoutines","page","setPage","getAllRoutines","limmitedRoutines","slice","displayRoutines","map","r","idx","SingleRoutine","routine","activities","displayActivities","a","name","creatorName","goal","Activity","activity","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './routines.css'\n\n/*\n    I've put this axios function outside of the component, but it can go inside the useEffect if you want\n    Mainly I like it outside.  In fact, it might be good to put all the axios calls in a seperate\n    folder for ease of use (and import them in as needed)\n*/\nasync function getRoutines() {\n  let { data } = await axios.get(\n    'http://fitnesstrac-kr.herokuapp.com/api/routines'\n  )\n  return data\n}\n\n/*\n    All Routines component - displays the routines\n*/\nconst Routines = () => {\n  const [routines, setRoutines] = useState([]) // initially it is empty array\n\n  // for pagination.. not required\n  const [page, setPage] = useState(0) // load 10 per page\n\n  /*\n    useEffect runs once the page loads.  If you do not put the [] as the second argument it will\n    run once for every time the component re-renders (which happens a lot).\n  */\n  useEffect(() => {\n    // async function required for awaiting the routes\n    async function getAllRoutines() {\n      let data = await getRoutines()\n      setRoutines(data) // when we have the data, set it in our components variable\n    }\n\n    // call the inner function once to start the process\n    getAllRoutines()\n\n    // console.log('USE EFFECT RUNS ONCE')\n  }, [])\n\n  //   console.log(routines)\n\n  // pagination example (this does 10 per page)\n  let limmitedRoutines = routines.slice(0 + page * 10, page * 10 + 10)\n\n  // Creates a <SingleRoutine /> component for every routine in our arrray\n  let displayRoutines = limmitedRoutines.map((r, idx) => {\n    return <SingleRoutine key={idx} routine={r} />\n  })\n  // vvvvv  ---used below in the render -- vvvvvv\n\n  return (\n    <div className='routines'>\n      {/* Button is for pagination */}\n      <button onClick={() => setPage(page + 1)}>Next 10</button>\n      {displayRoutines}\n    </div>\n  )\n}\n\n/*\n    This should probably be in its own file but I put it here for convineince during the demo\n    Renders a single routine.  Used in the map above ^^^\n*/\nconst SingleRoutine = ({ routine }) => {\n  const activities = routine.activities\n\n  // same thing as mapping routines but for activities\n  let displayActivities = activities.map((a, idx) => {\n    return <Activity key={idx} activity={a} />\n  })\n\n  return (\n    <div className='routine'>\n      <h1>{routine.name}</h1>\n      <h2>Creator: {routine.creatorName}</h2>\n      <h3>Goal: {routine.goal}</h3>\n      <ul>{displayActivities}</ul>\n    </div>\n  )\n}\n\nconst Activity = ({ activity }) => {\n  return (\n    <li className='activity'>\n      <h3>{activity.name}</h3>\n      <h3>{activity.description}</h3>\n    </li>\n  )\n}\n\n//  The only thing to export here is the routines component.  The other components are being used internally\n//  so they dont need their own exports.\nexport default Routines"]},"metadata":{},"sourceType":"module"}